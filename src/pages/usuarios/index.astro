---
import Layout from '../../layouts/Layout.astro';
import type { User } from '../../store/auth';

// Protegemos la ruta para que solo usuarios autenticados puedan acceder
const sessionCookie = Astro.cookies.get('session');
const user: User | null = sessionCookie ? JSON.parse(sessionCookie.value) : null;

if (!user) {
    return Astro.redirect('/');
}
---
<Layout title="Usuarios - RKT Regulador">
    <div class="usuarios-container">
        <h2>Gestión de Usuarios</h2>
        
        <div class="usuarios-actions">
            <button id="btn-nuevo-usuario" class="btn btn-primary">Nuevo Usuario</button>
        </div>

        <div class="usuarios-list">
            <table class="usuarios-table">
                <thead>
                    <tr>
                        <th>Email</th>
                        <th>Nombre</th>
                        <th>Estado</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody id="usuarios-tbody">
                    <!-- Los usuarios se cargarán dinámicamente -->
                </tbody>
            </table>
        </div>

        <!-- Modal para nuevo/editar usuario -->
        <div id="modal-usuario" class="modal">
            <div class="modal-content">
                <span class="close">&times;</span>
                <h3 id="modal-title">Nuevo Usuario</h3>
                <form id="form-usuario">
                    <div class="form-group">
                        <label for="email">Email:</label>
                        <input type="email" id="email" name="email" required>
                    </div>
                    <div class="form-group">
                        <label for="name">Nombre:</label>
                        <input type="text" id="name" name="name" required>
                    </div>
                    <div class="form-group">
                        <label for="password">Contraseña:</label>
                        <input type="password" id="password" name="password" required>
                    </div>
                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary">Guardar</button>
                        <button type="button" class="btn btn-secondary" id="btn-cancelar">Cancelar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Mock de usuarios para demostración
        let usuarios = [
            { id: 1, email: 'demo@rkt-regulador.com', name: 'Usuario Demo', active: true },
            { id: 2, email: 'admin@rkt-regulador.com', name: 'Administrador', active: true },
            { id: 3, email: 'operador@rkt-regulador.com', name: 'Operador', active: false }
        ];

        // Elementos del DOM
        const modal = document.getElementById('modal-usuario') as HTMLElement;
        const btnNuevo = document.getElementById('btn-nuevo-usuario') as HTMLButtonElement;
        const btnCerrar = document.querySelector('.close') as HTMLElement;
        const btnCancelar = document.getElementById('btn-cancelar') as HTMLButtonElement;
        const form = document.getElementById('form-usuario') as HTMLFormElement;
        const tbody = document.getElementById('usuarios-tbody') as HTMLTableSectionElement;

        // Cargar usuarios en la tabla
        function cargarUsuarios() {
            tbody.innerHTML = '';
            usuarios.forEach(usuario => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${usuario.email}</td>
                    <td>${usuario.name}</td>
                    <td>
                        <span class="status ${usuario.active ? 'active' : 'inactive'}">
                            ${usuario.active ? 'Activo' : 'Inactivo'}
                        </span>
                    </td>
                    <td>
                        <button class="btn btn-small btn-edit" data-id="${usuario.id}">Editar</button>
                        <button class="btn btn-small btn-toggle" data-id="${usuario.id}">
                            ${usuario.active ? 'Desactivar' : 'Activar'}
                        </button>
                    </td>
                `;
                tbody.appendChild(row);
            });

            // Agregar event listeners a los botones
            document.querySelectorAll('.btn-edit').forEach(btn => {
                btn.addEventListener('click', (e) => {
                    const target = e.target as HTMLButtonElement;
                    editarUsuario(parseInt(target.dataset.id || '0'));
                });
            });

            document.querySelectorAll('.btn-toggle').forEach(btn => {
                btn.addEventListener('click', (e) => {
                    const target = e.target as HTMLButtonElement;
                    toggleUsuario(parseInt(target.dataset.id || '0'));
                });
            });
        }

        // Abrir modal para nuevo usuario
        function abrirModal(usuario = null) {
            const modalTitle = document.getElementById('modal-title') as HTMLElement;
            const emailInput = document.getElementById('email') as HTMLInputElement;
            const nameInput = document.getElementById('name') as HTMLInputElement;
            const passwordInput = document.getElementById('password') as HTMLInputElement;

            if (usuario) {
                modalTitle.textContent = 'Editar Usuario';
                emailInput.value = usuario.email;
                nameInput.value = usuario.name;
                passwordInput.value = '';
                passwordInput.placeholder = 'Dejar vacío para mantener contraseña actual';
                passwordInput.required = false;
            } else {
                modalTitle.textContent = 'Nuevo Usuario';
                form.reset();
                passwordInput.placeholder = '';
                passwordInput.required = true;
            }

            modal.style.display = 'block';
        }

        // Cerrar modal
        function cerrarModal() {
            modal.style.display = 'none';
            form.reset();
        }

        // Editar usuario
        function editarUsuario(id) {
            const usuario = usuarios.find(u => u.id === id);
            if (usuario) {
                abrirModal(usuario);
            }
        }

        // Toggle estado usuario
        function toggleUsuario(id) {
            const usuario = usuarios.find(u => u.id === id);
            if (usuario) {
                usuario.active = !usuario.active;
                cargarUsuarios();
            }
        }

        // Event listeners
        btnNuevo.addEventListener('click', () => abrirModal());
        btnCerrar.addEventListener('click', cerrarModal);
        btnCancelar.addEventListener('click', cerrarModal);

        // Cerrar modal al hacer clic fuera
        window.addEventListener('click', (e) => {
            if (e.target === modal) {
                cerrarModal();
            }
        });

        // Manejar envío del formulario
        form.addEventListener('submit', (e) => {
            e.preventDefault();
            const formData = new FormData(form);
            const email = formData.get('email');
            const name = formData.get('name');
            const password = formData.get('password');

            // Aquí iría la lógica para guardar en el backend
            console.log('Guardando usuario:', { email, name, password });
            
            // Mock: agregar nuevo usuario
            const newId = Math.max(...usuarios.map(u => u.id)) + 1;
            usuarios.push({
                id: newId,
                email: email as string,
                name: name as string,
                active: true
            });

            cargarUsuarios();
            cerrarModal();
        });

        // Cargar usuarios al iniciar
        cargarUsuarios();
    </script>

    <style>
        .usuarios-container {
            padding: 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .usuarios-actions {
            margin-bottom: 2rem;
        }

        .btn {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
            text-decoration: none;
            display: inline-block;
        }

        .btn-primary {
            background: #007bff;
            color: white;
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-small {
            padding: 0.25rem 0.5rem;
            font-size: 0.8rem;
            margin-right: 0.5rem;
        }

        .btn-edit {
            background: #28a745;
            color: white;
        }

        .btn-toggle {
            background: #ffc107;
            color: #212529;
        }

        .usuarios-table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .usuarios-table th,
        .usuarios-table td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid #dee2e6;
        }

        .usuarios-table th {
            background: #f8f9fa;
            font-weight: 600;
        }

        .status {
            padding: 0.25rem 0.5rem;
            border-radius: 12px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .status.active {
            background: #d4edda;
            color: #155724;
        }

        .status.inactive {
            background: #f8d7da;
            color: #721c24;
        }

        /* Modal */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }

        .modal-content {
            background-color: white;
            margin: 5% auto;
            padding: 2rem;
            border-radius: 8px;
            width: 90%;
            max-width: 500px;
            position: relative;
        }

        .close {
            position: absolute;
            right: 1rem;
            top: 1rem;
            font-size: 1.5rem;
            cursor: pointer;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
        }

        .form-group input {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        .form-actions {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
            margin-top: 2rem;
        }

        @media (max-width: 768px) {
            .usuarios-container {
                padding: 1rem;
            }
            
            .usuarios-table {
                font-size: 0.9rem;
            }
            
            .usuarios-table th,
            .usuarios-table td {
                padding: 0.5rem;
            }
        }
    </style>
</Layout>